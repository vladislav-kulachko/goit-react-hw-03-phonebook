{"version":3,"sources":["components/Filter/ContactFilter.module.scss","components/Form/ContactForm.module.scss","components/Form/ContactForm.jsx","components/Filter/ContactFilter.jsx","components/List/ContactList.jsx","App.jsx","index.js","components/List/ContactList.module.scss","App.module.scss"],"names":["module","exports","ContactForm","state","name","number","handlerContactAdd","e","setState","target","value","handlerSubmitFormClick","preventDefault","props","onSubmit","handlerSubmitFormEnter","key","className","s","form","this","onKeyPress","label","input","type","pattern","title","required","onChange","button","Component","ContactFilter","filterValue","handlerFindContact","ContactList","contacts","filter","handlerDelContact","console","log","list","length","notify","toLowerCase","search","map","id","item","phone","onClick","App","find","contact","alert","prevState","uuidv4","localStorage","setItem","JSON","stringify","getItem","parse","container","contactsSection","titleList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d6f9062.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__3WyUP\",\"input\":\"ContactFilter_input__c9J5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3ycCN\",\"label\":\"ContactForm_label__29XT6\",\"input\":\"ContactForm_input__2q1Q9\",\"button\":\"ContactForm_button__1SJYD\",\"puls\":\"ContactForm_puls__3z9Yv\"};","import {Component} from 'react';\r\nimport s from './ContactForm.module.scss';\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handlerContactAdd = e => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n  handlerSubmitFormClick = e => {\r\n    const {name, number} = this.state;\r\n    if (name !== '' && number !== '') {\r\n      e.preventDefault();\r\n      this.props.onSubmit(this.state);\r\n      this.setState({name: '', number: ''});\r\n    }\r\n  };\r\n  handlerSubmitFormEnter = e => {\r\n    const {name, number} = this.state;\r\n    if (e.key === 'Enter' && name !== '' && number !== '') {\r\n      e.preventDefault();\r\n      this.props.onSubmit(this.state);\r\n      this.setState({name: '', number: ''});\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        className={s.form}\r\n        onSubmit={this.handlerSubmitFormClick}\r\n        onKeyPress={this.handlerSubmitFormEnter}\r\n      >\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handlerContactAdd}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handlerContactAdd}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import s from './ContactFilter.module.scss';\r\nexport default function ContactFilter({filterValue, handlerFindContact}) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contact by name\r\n      <input\r\n        className={s.input}\r\n        name=\"find\"\r\n        title=\"Введите имя или название контакта\"\r\n        value={filterValue}\r\n        onChange={handlerFindContact}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import s from './ContactList.module.scss';\r\nexport default function ContactList({contacts, filter, handlerDelContact}) {\r\n  console.log(contacts);\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.length === 0 ? (\r\n        <li className={s.notify}>\r\n          Oops, this is empty... Please add your contacts!\r\n        </li>\r\n      ) : (\r\n        contacts\r\n          .filter(({name}) => name.toLowerCase().search(filter) !== -1)\r\n          .map(({id, name, number}) => (\r\n            <li className={s.item} key={id}>\r\n              {name}:<span className={s.phone}>{number}</span>\r\n              <button\r\n                className={s.button}\r\n                id={id}\r\n                type=\"button\"\r\n                onClick={handlerDelContact}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n","import {Component} from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport s from './App.module.scss';\nimport ContactForm from './components/Form/ContactForm';\nimport ContactFilter from './components/Filter/ContactFilter';\nimport ContactList from './components/List/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    if (contacts) {\n      this.setState({contacts: JSON.parse(contacts)});\n    }\n  }\n  onSubmit = ({name, number}) => {\n    if (this.state.contacts.find(contact => contact.number === number)) {\n      alert('Этот номер уже есть в списке');\n    } else if (this.state.contacts.find(contact => contact.name === name)) {\n      alert('Это имя уже есть в списке');\n    } else {\n      this.setState(prevState => ({\n        contacts: [\n          {id: uuidv4(), name: name, number: number},\n          ...prevState.contacts,\n        ],\n      }));\n    }\n  };\n  handlerFindContact = e => {\n    this.setState({filter: e.target.value});\n  };\n  handlerDelContact = e => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(\n        contact => contact.id !== e.target.id,\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <section className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.onSubmit}></ContactForm>\n        <section className={s.contactsSection}>\n          <h2 className={s.titleList}>Contacts list</h2>\n          <ContactFilter\n            filterValue={this.state.filter}\n            handlerFindContact={this.handlerFindContact}\n          ></ContactFilter>\n          <ContactList\n            filter={this.state.filter}\n            contacts={this.state.contacts}\n            handlerDelContact={this.handlerDelContact}\n          ></ContactList>\n        </section>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3ZP6a\",\"item\":\"ContactList_item__3KkoO\",\"phone\":\"ContactList_phone__3lZo5\",\"button\":\"ContactList_button__7WACw\",\"puls\":\"ContactList_puls__1cbHC\",\"notify\":\"ContactList_notify__1X4I4\",\"blink\":\"ContactList_blink__4hih1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__34kdI\",\"title\":\"App_title__3b_LY\",\"titleList\":\"App_titleList__38458\"};"],"sourceRoot":""}